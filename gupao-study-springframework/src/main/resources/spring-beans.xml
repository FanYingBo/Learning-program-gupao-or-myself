<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="customService" class="com.study.dubbo.springframework.service.CustomServiceImpl"/>
    <bean id="customAutowire"  class="com.study.dubbo.springframework.service.CustomAutowireServiceImpl"  >
    </bean>

    <bean id="customShopping" class="com.study.dubbo.springframework.service.CustomShoppingService" >
        <constructor-arg ref="customService"/>
        <!-- <property name="user" ref="user"/> -->  <!-- 这种写法会将user当着单例来获取-->
        <!--lookup-method方式会将user当着原型来获取-->
    </bean>

    <bean id="role" scope="singleton" class="com.study.dubbo.springframework.bean.entity.Role"></bean>
    <bean id="user" class="com.study.dubbo.springframework.bean.entity.User" scope="prototype">
        <lookup-method name="getRole" bean="role"></lookup-method>
        <!--<replaced-method></replaced-method>-->
        <!--动态替换原来的方法逻辑-->
    </bean>
    <bean id="beanGroup" lazy-init="false" class="com.study.dubbo.springframework.bean.entity.UserGroup">
        <property name="users">
            <list value-type="com.study.dubbo.springframework.bean.entity.User"></list>
        </property>
    </bean>

</beans>